# Generated by Django 5.1.3 on 2024-11-17 17:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Awards",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name_awards",
                    models.CharField(default="Нет наград", max_length=255, verbose_name="Название награды"),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="Количество наград")),
                ("created_at", models.DateField(auto_now_add=True, verbose_name="Дата создания")),
                ("updated_at", models.DateField(auto_now=True, null=True, verbose_name="Дата изменения")),
            ],
            options={
                "verbose_name": "награду",
                "verbose_name_plural": "Награды",
                "ordering": ["name_awards"],
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name_country", models.CharField(max_length=255, verbose_name="Страна")),
                ("created_at", models.DateField(auto_now_add=True, verbose_name="Дата создания")),
                ("updated_at", models.DateField(auto_now=True, null=True, verbose_name="Дата изменения")),
            ],
            options={
                "verbose_name": "страну",
                "verbose_name_plural": "Страны",
            },
        ),
        migrations.CreateModel(
            name="Employment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "employment",
                    models.CharField(
                        help_text="Актер, Режиссер, и др.", max_length=255, verbose_name="Род деятельности"
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True, verbose_name="Дата создания")),
                ("updated_at", models.DateField(auto_now=True, null=True, verbose_name="Дата изменения")),
            ],
            options={
                "verbose_name": "род деятельности",
                "verbose_name_plural": "Род деятельности",
            },
        ),
        migrations.CreateModel(
            name="MediaFileImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "image_name",
                    models.CharField(
                        help_text="Название изображения для вывода",
                        max_length=255,
                        verbose_name="Название изображения",
                    ),
                ),
                (
                    "image_easy",
                    models.ImageField(
                        help_text="Загрузите главное фото для знаменитости, или постер для фильма",
                        upload_to="images/easy",
                        verbose_name="Главное фото/ Постер",
                    ),
                ),
                (
                    "image_medium",
                    models.ImageField(
                        blank=True,
                        help_text="Загрузите изображение для вывода в квизе на уровне сложности: средний",
                        null=True,
                        upload_to="images/medium",
                        verbose_name="Изображение сложность: средняя",
                    ),
                ),
                (
                    "image_hard",
                    models.ImageField(
                        blank=True,
                        help_text="Загрузите изображение для вывода в квизе на уровне сложности: сложно",
                        null=True,
                        upload_to="images/hard",
                        verbose_name="Изображение сложность: сложно",
                    ),
                ),
            ],
            options={
                "verbose_name": "изображение",
                "verbose_name_plural": "Изображения",
            },
        ),
        migrations.CreateModel(
            name="MediaFileVideo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "video_name",
                    models.CharField(
                        help_text="Название видео для вывода", max_length=255, verbose_name="Название видео"
                    ),
                ),
                ("video_file", models.FileField(blank=True, null=True, upload_to="videos", verbose_name="Видеофайл")),
            ],
            options={
                "verbose_name": "видеозапись",
                "verbose_name_plural": "Видеозаписи",
            },
        ),
        migrations.CreateModel(
            name="Celebrity",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("first_name", models.CharField(max_length=255, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=255, verbose_name="Фамилия")),
                (
                    "slug",
                    models.SlugField(
                        help_text="Уникальное имя формируется из фамилии и имени",
                        max_length=255,
                        unique=True,
                        verbose_name="URL",
                    ),
                ),
                ("birthday", models.DateField(help_text="Формат даты: (YYYY-MM-DD)", verbose_name="Дата рождения")),
                ("title", models.TextField(blank=True, null=True, verbose_name="Статья")),
                ("is_published", models.BooleanField(default=True, verbose_name="Публикация")),
                ("created_at", models.DateField(auto_now_add=True, verbose_name="Дата создания")),
                ("updated_at", models.DateField(auto_now=True, null=True, verbose_name="Дата изменения")),
                (
                    "awards",
                    models.ForeignKey(
                        blank=True,
                        default="Нет наград",
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="celebrity_awards",
                        to="quiz_info.awards",
                        verbose_name="Награды",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        default="Страна рождения не указана",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="celebrity_country",
                        to="quiz_info.country",
                        verbose_name="Страна рождения",
                    ),
                ),
                (
                    "employment",
                    models.ManyToManyField(
                        related_name="employment_actors", to="quiz_info.employment", verbose_name="Кем работает"
                    ),
                ),
                (
                    "photo",
                    models.ForeignKey(
                        default="Нет фото",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="photo",
                        to="quiz_info.mediafileimage",
                        verbose_name="Фотография",
                    ),
                ),
            ],
            options={
                "verbose_name": "известную личность",
                "verbose_name_plural": "Известные личности",
                "ordering": ["last_name", "birthday"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name_family",
                    models.CharField(
                        help_text="Название семьи (например: Семья Ивановых)",
                        max_length=255,
                        verbose_name="Название семьи",
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True, verbose_name="Дата создания")),
                ("updated_at", models.DateField(auto_now=True, null=True, verbose_name="Дата изменения")),
                (
                    "he",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="husband",
                        to="quiz_info.celebrity",
                        verbose_name="Муж",
                    ),
                ),
                (
                    "she",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="wife",
                        to="quiz_info.celebrity",
                        verbose_name="Жена",
                    ),
                ),
            ],
            options={
                "verbose_name": "отношения",
                "verbose_name_plural": "Отношения",
            },
        ),
        migrations.CreateModel(
            name="Films",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("film_name", models.CharField(max_length=255, verbose_name="Название фильма")),
                ("description", models.TextField(verbose_name="Описание фильма")),
                (
                    "slug",
                    models.SlugField(
                        help_text="Уникальное имя формируется из названия фильма",
                        max_length=255,
                        unique=True,
                        verbose_name="URL фильма",
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="Используйте формат года: (YYYY)",
                        validators=[
                            django.core.validators.MinValueValidator(1895),
                            django.core.validators.MaxValueValidator(2024),
                        ],
                        verbose_name="Год выпуска",
                    ),
                ),
                ("budget", models.PositiveIntegerField(verbose_name="Бюджет фильма в миллионах долларов")),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Рейтинг",
                    ),
                ),
                ("is_published", models.BooleanField(default=True, verbose_name="Публикация")),
                ("created_at", models.DateField(auto_now_add=True, verbose_name="Дата создания")),
                ("updated_at", models.DateField(auto_now=True, null=True, verbose_name="Дата изменения")),
                (
                    "actors",
                    models.ManyToManyField(
                        related_name="film_actors", to="quiz_info.celebrity", verbose_name="Актеры"
                    ),
                ),
                (
                    "awards",
                    models.ForeignKey(
                        blank=True,
                        default="Нет наград",
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="film_awards",
                        to="quiz_info.awards",
                        verbose_name="Награды",
                    ),
                ),
                (
                    "composer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="composer",
                        to="quiz_info.celebrity",
                        verbose_name="Композитор",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        default="Страна производства не указана",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="film_country",
                        to="quiz_info.country",
                        verbose_name="Страна",
                    ),
                ),
                (
                    "director",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="director",
                        to="quiz_info.celebrity",
                        verbose_name="Режиссер",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        default="Нет скриншота",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="image",
                        to="quiz_info.mediafileimage",
                        verbose_name="Скриншот",
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        default="Нет видеоролика",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="video",
                        to="quiz_info.mediafilevideo",
                        verbose_name="Видеоролик",
                    ),
                ),
            ],
            options={
                "verbose_name": "фильм",
                "verbose_name_plural": "Фильмы",
                "ordering": ["year", "film_name", "director", "country", "rating", "is_published"],
            },
        ),
    ]
